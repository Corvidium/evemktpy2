updateAllGameIDs.py
updateMarketItems.py
updateHist.py
initializeTrackedItemDB.py
updateMarketOrders

evalHist.py
evalComp.py
--Item too new to have a history
--rare spiky sales



Prep scripts:
	--(build a reference table to connect TYPEID to NAME)
	idcompile.py 
Update scripts:
	--(request list of all items traded in target region)
	mktscrape.py
	--(request a one-year volume history for each item traded in target region)
	history.py
Processing scripts:
	--(adds names to list of items traded in region)
	collate.py
	--(adds volume to list of items traded in region)
	itemproc.py
---LINE OF TODO--
	--MAKE AVERAGE VOLUME LAST 3 MONTHS ONLY
	--PULL JITA BUY VALUE
	--ARE THE NEXT FEW DAYS OF VOLUME CONTESTED? (what is the volume updated recently on market?)
		if no volume on mkt:
			no
		if very low volume on market:
			no
		if medium volume on market:
			=volume updated recently

	
	--identify spiky vs constant demand


	--(add volume on sell order in destination to list of items traded in region)
	--(add order update frequency to list of items traded in region)
	iterate through keepstar orders
		if sell order:
			add volume to volumeOnSell
			add 'created date' to competition[] and volume of that competition
	iterate through activeitems
		sum volumeOnSell
			record days of supply remaining
		for each competitor sell order:
			(24-hours since updated)/24 = market fraction
			(volume of order/mkt daily volume )*market fraction
		record number of 'created date' within one hour
		record number of 'created date' within one day
			(NAIIVE) record fraction of orders I would fill 


	--(add Jita Sell Value to list of items traded in region)
	iterate through activeitems
		for each active item
			request all Forge market sell orders
				for each forge sell order
					record sell price in array
				find minimum sell price
		record Jita Sell Value
		compute margin (Eso avg price-JSV)
		compute arbitrage/day = margin*iskflux




market/types   #items
universe/names #build local dictionary
market/history #volume
market/orders  #stock
markets/structures/ #stock

market/orders  #margin from Jita



relevantTypes = [/types call]

for each itemID in relevantTypes [items with any market volume]

	call /history on itemID [find average market volume for that one type]
	hotList[itemID][2] = average monthly volume

	call ??? [find name of itemID]
	hotList[itemID][1] = name

sort hotList by average monthly volume

auth self
citadelOrders = /structures call on keepstar

-----------------------------------------------------------------------------------

for each hotList item
	call /orders with typeID [find out volume on sell orders] (ALL SELL ORDERS IN KEEPSTAR)
		(FOR EACH: IF on hotlist, then SUM volume on sell order, COMPUTE days supply remaining, RECORD competitor sell order modification frequency)
			[stretch goal: compute competition intensity based on actual update frequency]
	FOR EACH hotlist item
		Call /orders in the forge, find minimum price
			[stretch goal: compute average price of buying the amount I want to buy]
	FOR EACH hotlist item
		COMPUTE (fraction of market I can capture with [CONFIG.UPDATEFREQ] updates)*(profitability per unit)*(total monthly volume)
	RANK hotlist by monthly profit


1024004680659 - D-PNP9-D-PNP9 - D-Pyongyang

10000039 - Esoteria region ID

60003760 - Jita IV - Moon 4 - Caldari Navy Assembly Plant

10000002 - The Forge