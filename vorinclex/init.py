#PREREQUISITES TO RUN:
#FLAG TO INDICATE WHETHER TO REFRESH JITA PRICE HISTORY (SKIP scrapeJita.py) USUALLY 30 MINUTES

#FLAG TO INDICATE WHETHER TO REFRESH REGION VOLUME HISTORY (SKIP updateHist.py) USUALLY 1 HOUR

#STRUCTURE ID OF TARGET MARKET

#REGION ID OF TARGET MARKET (MUST HAVE HISTORY OTHERWISE RUN UPDATEHIST.PY)




#Run scripts in this order:

#FROM A LIST OF ALL GAME IDS, CREATES THE SAME LIST IN JSON FORMAT
updateAllGameIDs.py

#CALLS API TO GET LIST OF ALL GAMEIDS WITH MARKET HISTORY IN TARGET REGION AND PUTS IT IN activeTypesScrape.json
scrapeMarketItems.py

#OPENS THE REGION ACTIVE MARKET ITEMS LIST AND OPENS THE TYPEID:ITEMNAME LIST AND CONNECTS THE NAME OF EACH ACTIVE ITEM TO ITS ID, THEN PUTS THE RESULT IN activeitems.json
initializeTrackedItemDB.py

#SCRAPES ALL SELL ORDERS IN TARGET STRUCTURE INTO A structureOrdersOut.json FILE
scrapeMarketOrders.py

#LOADS ACTIVEITEMS, THEN SCRAPES TARGET REGION'S DAILY VOLUME AND PRICE HISTORY FOR EACH ITEM TO THE hist/ DIRECTORY
updateHist.py

#OPENS ACTIVEITEMS, THEN FOR EACH ITEM OPENS TARGET REGION DAILY HISTORY AND WRITES AVERAGE VOLUME AND ISKFLUX TO activeItemsVol.json
evalHist.py

#OPENS activeItemsVol.json AND:
#FOR EACH ITEM WITH SIGNIFICANT ISKFLUX, SCRAPES JITA BUY COST TO A FILE IN /jitaOrders directory
scrapeJita.py

#OPENS activeItemsVol.json AND:
#FOR EACH ITEM, WRITES THE LOWEST JITA PRICE TO activeItemsVol.json
evalJitaPrice.py

#OPENS activeItemsVol.json
#OPENS STRUCTURE ORDERS
#FOR EACH ORDER, IDENTIFY ITS ITEM, THEN COMPILE WITH THE ITEM RECORD THIS COMPETITOR SELL ORDER TIMESTAMP, THIS PRICE, AND THIS VOLUME OFFERED FOR SALE

#IF ANY SELL ORDERS ARE FOR AN UNFAMILIAR ITEM, TRY TO REPAIR THE ORIGINAL activeitems.json SO USER CAN RESTART ALL SCRIPTS

#FOR EACH ITEM, EVALUATE: 
#    1) WHETHER STOCK ON MARKET WILL RUN OUT SOON AT HISTORICAL VOLUMES (I.E. FIND IMPENDING SHORTAGES)
#    2) HOW MUCH MARGIN A CURRENT SELLER RECEIVES GIVEN CURRENT COMPETITION (I.E. FIND HIGH MARGIN LOW COMPETITION ITEMS)
evalComp.py

#Results appear in:
#HIGH MARGIN LOW COMPETITION
maxProfitAnyStock.json
#IMPENDING SHORTAGE
maxProfitOutStock.json